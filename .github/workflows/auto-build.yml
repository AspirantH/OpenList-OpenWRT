name: Build Packages

on:
  # 每日UTC时间0点触发（北京时间+8小时，即上午8点）
  schedule:
    - cron: '0 0 * * *'
  # 保留仓库事件调度触发（可选，用于手动触发）
  repository_dispatch:
    types: [release-build]

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Create release tag and release
        id: create_release
        run: |
          # 区分触发方式，设置标签和发布名称
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # 若为手动触发，使用client_payload参数
            TAG_NAME="${{ github.event.client_payload.release_tag }}"
            RELEASE_NAME="${{ github.event.client_payload.release_name }}"
          else
            # 若为定时触发，使用"nightly-日期"作为标签（如nightly-20251020）
            TAG_NAME="nightly-$(date +%Y%m%d)"
            RELEASE_NAME="Nightly Build $(date +%Y-%m-%d)"
          fi
          
          echo "Creating tag: $TAG_NAME"
          echo "Creating release: $RELEASE_NAME"
          
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "$TAG_NAME" || echo "Tag already exists"
          git push origin "$TAG_NAME" || echo "Tag already pushed"
          
          # 输出标签名供后续步骤使用
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.release_name || format('Nightly Build {0}', github.run_date) }}
          tag: ${{ steps.create_release.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true  #  nightly版本标记为预发布
          body: |
            ## ${{ steps.create_release.outputs.tag_name }}
            
            This is an automated nightly build of OpenWrt packages.
            
            **Build Date:** $(date +%Y-%m-%d)
            **Source Repository:** ${{ github.repositoryUrl }}

  build:
    name: Build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
        sdk:
          - openwrt-24.10

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Build with Static Linking
        run: |
          sed -i '/golang-package/a \\tGO_PKG_DEFAULT_LDFLAGS:=-w -s -extldflags "-static"' openlist/Makefile

      - name: UPX Compress
        if: ${{ matrix.arch != 'loongarch64_generic' && matrix.arch != 'mips64_mips64r2' && matrix.arch != 'mips64_octeonplus' && matrix.arch != 'mips64el_mips64r2' && matrix.arch != 'riscv64_riscv64' }}
        run: |
          sed -i '/openlist.init/a \\t/usr/bin/upx --lzma --best $(1)\/usr\/bin\/openlist' openlist/Makefile

      - name: Build Packages
        uses: OpenListTeam/openwrt-gh-action-sdk@go1.25
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: luci-app-openlist
          NO_REFRESH_CHECK: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          path: |
            bin/packages/${{ matrix.arch }}/packages_ci/*.apk
            bin/packages/${{ matrix.arch }}/packages_ci/*.ipk

      - name: Create compress files
        continue-on-error: true
        run: |
          tar -zcvf ${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz -C bin/packages/${{ matrix.arch }}/ packages_ci

      - name: Upload packages to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.create-release.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          replacesArtifacts: false
          omitBody: true
          omitName: true
          artifacts: "${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz"
