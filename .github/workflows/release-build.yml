name: Build Packages

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g. v1.0.0)'
        required: true
        type: string
      release_name:
        description: 'Release Name (e.g. Release v1.0.0)'
        required: true
        type: string
      source_repository:
        description: 'Source Repository URL (e.g. https://github.com/xxx/xxx)'
        required: false
        type: string
        # 移除了使用github.repository的默认值

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      source_repo: ${{ steps.set_source_repo.outputs.source_repo }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # 添加步骤设置源码仓库地址，处理默认值
      - name: Set source repository
        id: set_source_repo
        run: |
          if [ -z "${{ github.event.inputs.source_repository }}" ]; then
            echo "source_repo=${{ github.repositoryUrl }}" >> $GITHUB_OUTPUT
          else
            echo "source_repo=${{ github.event.inputs.source_repository }}" >> $GITHUB_OUTPUT
          fi

      - name: Create release tag and release
        id: create_release
        run: |
          TAG_NAME="${{ github.event.inputs.release_tag }}"
          RELEASE_NAME="${{ github.event.inputs.release_name }}"
          echo "Creating tag: $TAG_NAME"
          echo "Creating release: $RELEASE_NAME"
          
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "$TAG_NAME" || echo "Tag already exists"
          git push origin "$TAG_NAME" || echo "Tag already pushed"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.inputs.release_name }}
          tag: ${{ github.event.inputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ github.event.inputs.release_tag }}
            
            This release contains OpenWrt packages built for multiple architectures.
            
            **Source Repository:** ${{ steps.set_source_repo.outputs.source_repo }}

  build:
    name: Build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
        sdk:
          - openwrt-24.10

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Build with Static Linking
        run: |
          sed -i '/golang-package/a \\tGO_PKG_DEFAULT_LDFLAGS:=-w -s -extldflags "-static"' openlist/Makefile

      - name: UPX Compress
        if: ${{ matrix.arch != 'loongarch64_generic' && matrix.arch != 'mips64_mips64r2' && matrix.arch != 'mips64_octeonplus' && matrix.arch != 'mips64el_mips64r2' && matrix.arch != 'riscv64_riscv64' }}
        run: |
          sed -i '/openlist.init/a \\t/usr/bin/upx --lzma --best $(1)\/usr\/bin\/openlist' openlist/Makefile

      - name: Build Packages
        uses: OpenListTeam/openwrt-gh-action-sdk@go1.25
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: luci-app-openlist
          NO_REFRESH_CHECK: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          path: |
            bin/packages/${{ matrix.arch }}/packages_ci/*.apk
            bin/packages/${{ matrix.arch }}/packages_ci/*.ipk

      - name: Create compress files
        continue-on-error: true
        run: |
          tar -zcvf ${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz -C bin/packages/${{ matrix.arch }}/ packages_ci

      - name: Upload packages to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          replacesArtifacts: false
          omitBody: true
          omitName: true
          artifacts: "${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz"
